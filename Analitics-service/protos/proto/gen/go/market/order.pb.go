// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: market/order.proto

//protoc -I proto proto/market/*.proto --go_out=./gen/go/ --go_opt=paths=source_relative --go-grpc_out=./gen/go/ --go-grpc_opt=paths=source_relative

package market

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HandleMakerPayedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *HandleMakerApprovedInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HandleMakerPayedResponse) Reset() {
	*x = HandleMakerPayedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleMakerPayedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleMakerPayedResponse) ProtoMessage() {}

func (x *HandleMakerPayedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleMakerPayedResponse.ProtoReflect.Descriptor instead.
func (*HandleMakerPayedResponse) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{0}
}

func (x *HandleMakerPayedResponse) GetData() *HandleMakerApprovedInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type HandleMakerApprovedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TakerInfo *TakerInfo `protobuf:"bytes,1,opt,name=takerInfo,proto3" json:"takerInfo,omitempty"`
	OrderInfo *Order     `protobuf:"bytes,2,opt,name=orderInfo,proto3" json:"orderInfo,omitempty"`
	Success   bool       `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *HandleMakerApprovedInfo) Reset() {
	*x = HandleMakerApprovedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleMakerApprovedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleMakerApprovedInfo) ProtoMessage() {}

func (x *HandleMakerApprovedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleMakerApprovedInfo.ProtoReflect.Descriptor instead.
func (*HandleMakerApprovedInfo) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{1}
}

func (x *HandleMakerApprovedInfo) GetTakerInfo() *TakerInfo {
	if x != nil {
		return x.TakerInfo
	}
	return nil
}

func (x *HandleMakerApprovedInfo) GetOrderInfo() *Order {
	if x != nil {
		return x.OrderInfo
	}
	return nil
}

func (x *HandleMakerApprovedInfo) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type HandlePayedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalOrderId string `protobuf:"bytes,1,opt,name=internalOrderId,proto3" json:"internalOrderId,omitempty"`
	Access          string `protobuf:"bytes,2,opt,name=access,proto3" json:"access,omitempty"`
}

func (x *HandlePayedRequest) Reset() {
	*x = HandlePayedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandlePayedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandlePayedRequest) ProtoMessage() {}

func (x *HandlePayedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandlePayedRequest.ProtoReflect.Descriptor instead.
func (*HandlePayedRequest) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{2}
}

func (x *HandlePayedRequest) GetInternalOrderId() string {
	if x != nil {
		return x.InternalOrderId
	}
	return ""
}

func (x *HandlePayedRequest) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

type HandleTakerPayedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *HandleTackerApprovedInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HandleTakerPayedResponse) Reset() {
	*x = HandleTakerPayedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleTakerPayedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleTakerPayedResponse) ProtoMessage() {}

func (x *HandleTakerPayedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleTakerPayedResponse.ProtoReflect.Descriptor instead.
func (*HandleTakerPayedResponse) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{3}
}

func (x *HandleTakerPayedResponse) GetData() *HandleTackerApprovedInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type HandleTackerApprovedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TakerInfo *TakerInfo `protobuf:"bytes,1,opt,name=takerInfo,proto3" json:"takerInfo,omitempty"`
	OrderInfo *Order     `protobuf:"bytes,2,opt,name=orderInfo,proto3" json:"orderInfo,omitempty"`
}

func (x *HandleTackerApprovedInfo) Reset() {
	*x = HandleTackerApprovedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleTackerApprovedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleTackerApprovedInfo) ProtoMessage() {}

func (x *HandleTackerApprovedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleTackerApprovedInfo.ProtoReflect.Descriptor instead.
func (*HandleTackerApprovedInfo) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{4}
}

func (x *HandleTackerApprovedInfo) GetTakerInfo() *TakerInfo {
	if x != nil {
		return x.TakerInfo
	}
	return nil
}

func (x *HandleTackerApprovedInfo) GetOrderInfo() *Order {
	if x != nil {
		return x.OrderInfo
	}
	return nil
}

type TakerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalId string  `protobuf:"bytes,1,opt,name=internalId,proto3" json:"internalId,omitempty"`
	Card       string  `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	Bank       string  `protobuf:"bytes,3,opt,name=bank,proto3" json:"bank,omitempty"`
	Fio        string  `protobuf:"bytes,4,opt,name=fio,proto3" json:"fio,omitempty"`
	Amount     float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TakerInfo) Reset() {
	*x = TakerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakerInfo) ProtoMessage() {}

func (x *TakerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakerInfo.ProtoReflect.Descriptor instead.
func (*TakerInfo) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{5}
}

func (x *TakerInfo) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *TakerInfo) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (x *TakerInfo) GetBank() string {
	if x != nil {
		return x.Bank
	}
	return ""
}

func (x *TakerInfo) GetFio() string {
	if x != nil {
		return x.Fio
	}
	return ""
}

func (x *TakerInfo) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TakerApprovedUpdateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=takerApprovedUpdateTime,proto3" json:"takerApprovedUpdateTime,omitempty"`
	MakerApprovedUpdateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=makerApprovedUpdateTime,proto3" json:"makerApprovedUpdateTime,omitempty"`
	InternalId              string                 `protobuf:"bytes,3,opt,name=internalId,proto3" json:"internalId,omitempty"`
	TakerApproved           bool                   `protobuf:"varint,4,opt,name=takerApproved,proto3" json:"takerApproved,omitempty"`
	MakerApproved           bool                   `protobuf:"varint,5,opt,name=makerApproved,proto3" json:"makerApproved,omitempty"`
	// int64 offerId = 6; // <>
	RequisiteId  string                 `protobuf:"bytes,6,opt,name=requisiteId,proto3" json:"requisiteId,omitempty"`
	AmountFiat   float64                `protobuf:"fixed64,7,opt,name=amountFiat,proto3" json:"amountFiat,omitempty"`
	AmountCrypto float64                `protobuf:"fixed64,8,opt,name=amountCrypto,proto3" json:"amountCrypto,omitempty"`
	CreateTime   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// int64 conflictId = 11; // <>
	// int64 fiatId = 12; // <>
	// int64 cryptoId = 13; // <>
	MakerPaid float64 `protobuf:"fixed64,10,opt,name=makerPaid,proto3" json:"makerPaid,omitempty"`
	TakerPaid float64 `protobuf:"fixed64,11,opt,name=takerPaid,proto3" json:"takerPaid,omitempty"`
	CheckId   int64   `protobuf:"varint,12,opt,name=checkId,proto3" json:"checkId,omitempty"`
	// int64 takerId = 17; // <>
	// int64 makerId = 18; // <>
	// int64 id = 19; // <>
	ReceiptTime     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=receiptTime,proto3" json:"receiptTime,omitempty"`
	ChatId          string                 `protobuf:"bytes,14,opt,name=chatId,proto3" json:"chatId,omitempty"`
	Status          string                 `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	MakerNickname   string                 `protobuf:"bytes,16,opt,name=makerNickname,proto3" json:"makerNickname,omitempty"`
	TakerNickname   string                 `protobuf:"bytes,17,opt,name=takerNickname,proto3" json:"takerNickname,omitempty"`
	Rate            float64                `protobuf:"fixed64,18,opt,name=rate,proto3" json:"rate,omitempty"`
	Type            string                 `protobuf:"bytes,19,opt,name=type,proto3" json:"type,omitempty"`
	Receipt         string                 `protobuf:"bytes,20,opt,name=receipt,proto3" json:"receipt,omitempty"`
	MakerCanApprove bool                   `protobuf:"varint,21,opt,name=makerCanApprove,proto3" json:"makerCanApprove,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{6}
}

func (x *Order) GetTakerApprovedUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TakerApprovedUpdateTime
	}
	return nil
}

func (x *Order) GetMakerApprovedUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakerApprovedUpdateTime
	}
	return nil
}

func (x *Order) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *Order) GetTakerApproved() bool {
	if x != nil {
		return x.TakerApproved
	}
	return false
}

func (x *Order) GetMakerApproved() bool {
	if x != nil {
		return x.MakerApproved
	}
	return false
}

func (x *Order) GetRequisiteId() string {
	if x != nil {
		return x.RequisiteId
	}
	return ""
}

func (x *Order) GetAmountFiat() float64 {
	if x != nil {
		return x.AmountFiat
	}
	return 0
}

func (x *Order) GetAmountCrypto() float64 {
	if x != nil {
		return x.AmountCrypto
	}
	return 0
}

func (x *Order) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Order) GetMakerPaid() float64 {
	if x != nil {
		return x.MakerPaid
	}
	return 0
}

func (x *Order) GetTakerPaid() float64 {
	if x != nil {
		return x.TakerPaid
	}
	return 0
}

func (x *Order) GetCheckId() int64 {
	if x != nil {
		return x.CheckId
	}
	return 0
}

func (x *Order) GetReceiptTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceiptTime
	}
	return nil
}

func (x *Order) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Order) GetMakerNickname() string {
	if x != nil {
		return x.MakerNickname
	}
	return ""
}

func (x *Order) GetTakerNickname() string {
	if x != nil {
		return x.TakerNickname
	}
	return ""
}

func (x *Order) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

func (x *Order) GetMakerCanApprove() bool {
	if x != nil {
		return x.MakerCanApprove
	}
	return false
}

type GetOrdersMeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateFrom     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
	Currency     string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	DateTo       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=dateTo,proto3" json:"dateTo,omitempty"`
	Status       string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Limit        int64                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Role         string                 `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	Type         string                 `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Page         int64                  `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	Archive      string                 `protobuf:"bytes,9,opt,name=archive,proto3" json:"archive,omitempty"`
	SearchFields string                 `protobuf:"bytes,10,opt,name=searchFields,proto3" json:"searchFields,omitempty"`
	ClientId     int64                  `protobuf:"varint,11,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Access       string                 `protobuf:"bytes,12,opt,name=access,proto3" json:"access,omitempty"`
}

func (x *GetOrdersMeRequest) Reset() {
	*x = GetOrdersMeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersMeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersMeRequest) ProtoMessage() {}

func (x *GetOrdersMeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersMeRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersMeRequest) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{7}
}

func (x *GetOrdersMeRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *GetOrdersMeRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetOrdersMeRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

func (x *GetOrdersMeRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetOrdersMeRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetOrdersMeRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetOrdersMeRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetOrdersMeRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetOrdersMeRequest) GetArchive() string {
	if x != nil {
		return x.Archive
	}
	return ""
}

func (x *GetOrdersMeRequest) GetSearchFields() string {
	if x != nil {
		return x.SearchFields
	}
	return ""
}

func (x *GetOrdersMeRequest) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *GetOrdersMeRequest) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

type GetOrdersMeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ResponseGetOrdersMeModel `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetOrdersMeResponse) Reset() {
	*x = GetOrdersMeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersMeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersMeResponse) ProtoMessage() {}

func (x *GetOrdersMeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersMeResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersMeResponse) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{8}
}

func (x *GetOrdersMeResponse) GetData() *ResponseGetOrdersMeModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResponseGetOrdersMeModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Pages int64        `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Data  []*CoreOrder `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ResponseGetOrdersMeModel) Reset() {
	*x = ResponseGetOrdersMeModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetOrdersMeModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetOrdersMeModel) ProtoMessage() {}

func (x *ResponseGetOrdersMeModel) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetOrdersMeModel.ProtoReflect.Descriptor instead.
func (*ResponseGetOrdersMeModel) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseGetOrdersMeModel) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResponseGetOrdersMeModel) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *ResponseGetOrdersMeModel) GetData() []*CoreOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type CoreOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MakerApprovedTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=makerApprovedTime,proto3" json:"makerApprovedTime,omitempty"`
	TakerApprovedTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=takerApprovedTime,proto3" json:"takerApprovedTime,omitempty"`
	MakerConfirmTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=makerConfirmTime,proto3" json:"makerConfirmTime,omitempty"`
	MakerApproved     bool                   `protobuf:"varint,4,opt,name=makerApproved,proto3" json:"makerApproved,omitempty"`
	TakerApproved     bool                   `protobuf:"varint,5,opt,name=takerApproved,proto3" json:"takerApproved,omitempty"`
	CompleteTime      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=completeTime,proto3" json:"completeTime,omitempty"`
	IsConfirmed       bool                   `protobuf:"varint,7,opt,name=isConfirmed,proto3" json:"isConfirmed,omitempty"`
	MakerAmount       float64                `protobuf:"fixed64,8,opt,name=makerAmount,proto3" json:"makerAmount,omitempty"`
	TakerAmount       float64                `protobuf:"fixed64,9,opt,name=takerAmount,proto3" json:"takerAmount,omitempty"`
	InternalId        string                 `protobuf:"bytes,10,opt,name=internalId,proto3" json:"internalId,omitempty"`
	// string externalId = 11; // <>
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DeleteTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=deleteTime,proto3" json:"deleteTime,omitempty"`
	// string paymentId = 15; // <>
	// string appealId = 16; // <>
	// int64 statusId = 17; // <>
	// int64 cryptoId = 18; // <>
	// uint64 offerId = 19; // <>
	// int64 makerId = 20; // <>
	// int64 takerId = 21; // <>
	// int64 fiatId = 22; // <>
	Benefit float64 `protobuf:"fixed64,14,opt,name=benefit,proto3" json:"benefit,omitempty"`
	ChatId  string  `protobuf:"bytes,15,opt,name=chatId,proto3" json:"chatId,omitempty"`
	Rate    float64 `protobuf:"fixed64,16,opt,name=rate,proto3" json:"rate,omitempty"`
	// int64 id = 26; // <>
	Fiat            string `protobuf:"bytes,17,opt,name=fiat,proto3" json:"fiat,omitempty"`
	Crypto          string `protobuf:"bytes,18,opt,name=crypto,proto3" json:"crypto,omitempty"`
	InternalOfferId string `protobuf:"bytes,19,opt,name=internalOfferId,proto3" json:"internalOfferId,omitempty"`
	MakerNickname   string `protobuf:"bytes,20,opt,name=makerNickname,proto3" json:"makerNickname,omitempty"`
	TakerNickname   string `protobuf:"bytes,21,opt,name=takerNickname,proto3" json:"takerNickname,omitempty"`
	Type            string `protobuf:"bytes,22,opt,name=type,proto3" json:"type,omitempty"`
	// uint32 typeId = 33; // <>
	Status  string   `protobuf:"bytes,23,opt,name=status,proto3" json:"status,omitempty"`
	Payment *Payment `protobuf:"bytes,24,opt,name=payment,proto3" json:"payment,omitempty"`
	Receipt string   `protobuf:"bytes,25,opt,name=receipt,proto3" json:"receipt,omitempty"`
	Role    string   `protobuf:"bytes,26,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CoreOrder) Reset() {
	*x = CoreOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreOrder) ProtoMessage() {}

func (x *CoreOrder) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreOrder.ProtoReflect.Descriptor instead.
func (*CoreOrder) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{10}
}

func (x *CoreOrder) GetMakerApprovedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakerApprovedTime
	}
	return nil
}

func (x *CoreOrder) GetTakerApprovedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TakerApprovedTime
	}
	return nil
}

func (x *CoreOrder) GetMakerConfirmTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MakerConfirmTime
	}
	return nil
}

func (x *CoreOrder) GetMakerApproved() bool {
	if x != nil {
		return x.MakerApproved
	}
	return false
}

func (x *CoreOrder) GetTakerApproved() bool {
	if x != nil {
		return x.TakerApproved
	}
	return false
}

func (x *CoreOrder) GetCompleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CompleteTime
	}
	return nil
}

func (x *CoreOrder) GetIsConfirmed() bool {
	if x != nil {
		return x.IsConfirmed
	}
	return false
}

func (x *CoreOrder) GetMakerAmount() float64 {
	if x != nil {
		return x.MakerAmount
	}
	return 0
}

func (x *CoreOrder) GetTakerAmount() float64 {
	if x != nil {
		return x.TakerAmount
	}
	return 0
}

func (x *CoreOrder) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *CoreOrder) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *CoreOrder) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *CoreOrder) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

func (x *CoreOrder) GetBenefit() float64 {
	if x != nil {
		return x.Benefit
	}
	return 0
}

func (x *CoreOrder) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *CoreOrder) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *CoreOrder) GetFiat() string {
	if x != nil {
		return x.Fiat
	}
	return ""
}

func (x *CoreOrder) GetCrypto() string {
	if x != nil {
		return x.Crypto
	}
	return ""
}

func (x *CoreOrder) GetInternalOfferId() string {
	if x != nil {
		return x.InternalOfferId
	}
	return ""
}

func (x *CoreOrder) GetMakerNickname() string {
	if x != nil {
		return x.MakerNickname
	}
	return ""
}

func (x *CoreOrder) GetTakerNickname() string {
	if x != nil {
		return x.TakerNickname
	}
	return ""
}

func (x *CoreOrder) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CoreOrder) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CoreOrder) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *CoreOrder) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

func (x *CoreOrder) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	InternalId string                 `protobuf:"bytes,3,opt,name=internalId,proto3" json:"internalId,omitempty"`
	// string externalId = 4; // <>
	// int64 detailId = 5; // <>
	// int64 statusId = 6; // <>
	// int64 cryptoId = 7; // <>
	// int64 offerId = 8; // <>
	// int64 fiatId = 9; // <>
	Id        int64          `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	TokenFrom string         `protobuf:"bytes,5,opt,name=tokenFrom,proto3" json:"tokenFrom,omitempty"`
	TokenTo   string         `protobuf:"bytes,6,opt,name=tokenTo,proto3" json:"tokenTo,omitempty"`
	Detail    *PaymentDetail `protobuf:"bytes,7,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{11}
}

func (x *Payment) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Payment) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Payment) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *Payment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Payment) GetTokenFrom() string {
	if x != nil {
		return x.TokenFrom
	}
	return ""
}

func (x *Payment) GetTokenTo() string {
	if x != nil {
		return x.TokenTo
	}
	return ""
}

func (x *Payment) GetDetail() *PaymentDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type PaymentDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
}

func (x *PaymentDetail) Reset() {
	*x = PaymentDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentDetail) ProtoMessage() {}

func (x *PaymentDetail) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentDetail.ProtoReflect.Descriptor instead.
func (*PaymentDetail) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{12}
}

func (x *PaymentDetail) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PaymentDetail) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type DeclineOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalId string   `protobuf:"bytes,1,opt,name=internalId,proto3" json:"internalId,omitempty"`
	ReasonId   []uint32 `protobuf:"varint,2,rep,packed,name=reasonId,proto3" json:"reasonId,omitempty"`
	Access     string   `protobuf:"bytes,3,opt,name=access,proto3" json:"access,omitempty"`
}

func (x *DeclineOrderRequest) Reset() {
	*x = DeclineOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineOrderRequest) ProtoMessage() {}

func (x *DeclineOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineOrderRequest.ProtoReflect.Descriptor instead.
func (*DeclineOrderRequest) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{13}
}

func (x *DeclineOrderRequest) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *DeclineOrderRequest) GetReasonId() []uint32 {
	if x != nil {
		return x.ReasonId
	}
	return nil
}

func (x *DeclineOrderRequest) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

type ResponseOrderModelWithChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requisite []*OrderRequisite `protobuf:"bytes,1,rep,name=requisite,proto3" json:"requisite,omitempty"`
	Order     *GetOrder         `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	User      *UserChat         `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ResponseOrderModelWithChat) Reset() {
	*x = ResponseOrderModelWithChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOrderModelWithChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOrderModelWithChat) ProtoMessage() {}

func (x *ResponseOrderModelWithChat) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOrderModelWithChat.ProtoReflect.Descriptor instead.
func (*ResponseOrderModelWithChat) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseOrderModelWithChat) GetRequisite() []*OrderRequisite {
	if x != nil {
		return x.Requisite
	}
	return nil
}

func (x *ResponseOrderModelWithChat) GetOrder() *GetOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *ResponseOrderModelWithChat) GetUser() *UserChat {
	if x != nil {
		return x.User
	}
	return nil
}

type GetOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TakerApprovedUpdateTime string `protobuf:"bytes,1,opt,name=takerApprovedUpdateTime,proto3" json:"takerApprovedUpdateTime,omitempty"`
	MakerApprovedUpdateTime string `protobuf:"bytes,2,opt,name=makerApprovedUpdateTime,proto3" json:"makerApprovedUpdateTime,omitempty"`
	InternalId              string `protobuf:"bytes,3,opt,name=internalId,proto3" json:"internalId,omitempty"`
	TakerApproved           bool   `protobuf:"varint,4,opt,name=takerApproved,proto3" json:"takerApproved,omitempty"`
	MakerApproved           bool   `protobuf:"varint,5,opt,name=makerApproved,proto3" json:"makerApproved,omitempty"`
	// int64 offerId = 6; // <>
	AmountFrom      float64                `protobuf:"fixed64,6,opt,name=amountFrom,proto3" json:"amountFrom,omitempty"`
	CreateTime      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	ExpireOffer     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expireOffer,proto3" json:"expireOffer,omitempty"`
	ExchangeRate    float64                `protobuf:"fixed64,9,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	AmountTo        float64                `protobuf:"fixed64,10,opt,name=amountTo,proto3" json:"amountTo,omitempty"`
	TokenTo         string                 `protobuf:"bytes,11,opt,name=tokenTo,proto3" json:"tokenTo,omitempty"`
	TokenFrom       string                 `protobuf:"bytes,12,opt,name=tokenFrom,proto3" json:"tokenFrom,omitempty"`
	Status          string                 `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	ChatId          string                 `protobuf:"bytes,14,opt,name=chatId,proto3" json:"chatId,omitempty"`
	Payments        []*RequisiteOrder      `protobuf:"bytes,15,rep,name=payments,proto3" json:"payments,omitempty"`
	Description     string                 `protobuf:"bytes,16,opt,name=description,proto3" json:"description,omitempty"`
	MakerCanApprove bool                   `protobuf:"varint,17,opt,name=makerCanApprove,proto3" json:"makerCanApprove,omitempty"`
}

func (x *GetOrder) Reset() {
	*x = GetOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrder) ProtoMessage() {}

func (x *GetOrder) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrder.ProtoReflect.Descriptor instead.
func (*GetOrder) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{15}
}

func (x *GetOrder) GetTakerApprovedUpdateTime() string {
	if x != nil {
		return x.TakerApprovedUpdateTime
	}
	return ""
}

func (x *GetOrder) GetMakerApprovedUpdateTime() string {
	if x != nil {
		return x.MakerApprovedUpdateTime
	}
	return ""
}

func (x *GetOrder) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *GetOrder) GetTakerApproved() bool {
	if x != nil {
		return x.TakerApproved
	}
	return false
}

func (x *GetOrder) GetMakerApproved() bool {
	if x != nil {
		return x.MakerApproved
	}
	return false
}

func (x *GetOrder) GetAmountFrom() float64 {
	if x != nil {
		return x.AmountFrom
	}
	return 0
}

func (x *GetOrder) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *GetOrder) GetExpireOffer() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireOffer
	}
	return nil
}

func (x *GetOrder) GetExchangeRate() float64 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *GetOrder) GetAmountTo() float64 {
	if x != nil {
		return x.AmountTo
	}
	return 0
}

func (x *GetOrder) GetTokenTo() string {
	if x != nil {
		return x.TokenTo
	}
	return ""
}

func (x *GetOrder) GetTokenFrom() string {
	if x != nil {
		return x.TokenFrom
	}
	return ""
}

func (x *GetOrder) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetOrder) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *GetOrder) GetPayments() []*RequisiteOrder {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *GetOrder) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetOrder) GetMakerCanApprove() bool {
	if x != nil {
		return x.MakerCanApprove
	}
	return false
}

type RequisiteOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName  string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	Surname    string `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	InternalId string `protobuf:"bytes,3,opt,name=internalId,proto3" json:"internalId,omitempty"`
	Wallet     string `protobuf:"bytes,4,opt,name=wallet,proto3" json:"wallet,omitempty"`
	Token      string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RequisiteOrder) Reset() {
	*x = RequisiteOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequisiteOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequisiteOrder) ProtoMessage() {}

func (x *RequisiteOrder) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequisiteOrder.ProtoReflect.Descriptor instead.
func (*RequisiteOrder) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{16}
}

func (x *RequisiteOrder) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *RequisiteOrder) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *RequisiteOrder) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *RequisiteOrder) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

func (x *RequisiteOrder) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type OrderRequisite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet     string  `protobuf:"bytes,1,opt,name=wallet,proto3" json:"wallet,omitempty"`
	Token      string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Amount     float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	InternalId string  `protobuf:"bytes,4,opt,name=internalId,proto3" json:"internalId,omitempty"`
	Fio        string  `protobuf:"bytes,5,opt,name=fio,proto3" json:"fio,omitempty"`
}

func (x *OrderRequisite) Reset() {
	*x = OrderRequisite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRequisite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequisite) ProtoMessage() {}

func (x *OrderRequisite) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequisite.ProtoReflect.Descriptor instead.
func (*OrderRequisite) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{17}
}

func (x *OrderRequisite) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

func (x *OrderRequisite) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *OrderRequisite) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderRequisite) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *OrderRequisite) GetFio() string {
	if x != nil {
		return x.Fio
	}
	return ""
}

type UserChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistrationDate string      `protobuf:"bytes,1,opt,name=registrationDate,proto3" json:"registrationDate,omitempty"`
	BlockedUntil     string      `protobuf:"bytes,2,opt,name=blockedUntil,proto3" json:"blockedUntil,omitempty"`
	IsBlocked        bool        `protobuf:"varint,3,opt,name=isBlocked,proto3" json:"isBlocked,omitempty"`
	LastEntry        string      `protobuf:"bytes,4,opt,name=lastEntry,proto3" json:"lastEntry,omitempty"`
	Nickname         string      `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Language         string      `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	Statistics       *UserDataOr `protobuf:"bytes,7,opt,name=statistics,proto3" json:"statistics,omitempty"`
	Avatar           string      `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Id               int64       `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Email            string      `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	// bool isDnD = 11; // <>
	Role string `protobuf:"bytes,11,opt,name=role,proto3" json:"role,omitempty"`
	Bio  string `protobuf:"bytes,12,opt,name=bio,proto3" json:"bio,omitempty"`
}

func (x *UserChat) Reset() {
	*x = UserChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChat) ProtoMessage() {}

func (x *UserChat) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChat.ProtoReflect.Descriptor instead.
func (*UserChat) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{18}
}

func (x *UserChat) GetRegistrationDate() string {
	if x != nil {
		return x.RegistrationDate
	}
	return ""
}

func (x *UserChat) GetBlockedUntil() string {
	if x != nil {
		return x.BlockedUntil
	}
	return ""
}

func (x *UserChat) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *UserChat) GetLastEntry() string {
	if x != nil {
		return x.LastEntry
	}
	return ""
}

func (x *UserChat) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserChat) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UserChat) GetStatistics() *UserDataOr {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *UserChat) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserChat) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserChat) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserChat) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UserChat) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

type UserDataOr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositiveFeedbacks      int64   `protobuf:"varint,1,opt,name=positiveFeedbacks,proto3" json:"positiveFeedbacks,omitempty"`
	NegativeFeedbacks      int64   `protobuf:"varint,2,opt,name=negativeFeedbacks,proto3" json:"negativeFeedbacks,omitempty"`
	TradesCompletedPercent float64 `protobuf:"fixed64,3,opt,name=tradesCompletedPercent,proto3" json:"tradesCompletedPercent,omitempty"`
	TotalTrades            int64   `protobuf:"varint,4,opt,name=totalTrades,proto3" json:"totalTrades,omitempty"`
}

func (x *UserDataOr) Reset() {
	*x = UserDataOr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataOr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataOr) ProtoMessage() {}

func (x *UserDataOr) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataOr.ProtoReflect.Descriptor instead.
func (*UserDataOr) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{19}
}

func (x *UserDataOr) GetPositiveFeedbacks() int64 {
	if x != nil {
		return x.PositiveFeedbacks
	}
	return 0
}

func (x *UserDataOr) GetNegativeFeedbacks() int64 {
	if x != nil {
		return x.NegativeFeedbacks
	}
	return 0
}

func (x *UserDataOr) GetTradesCompletedPercent() float64 {
	if x != nil {
		return x.TradesCompletedPercent
	}
	return 0
}

func (x *UserDataOr) GetTotalTrades() int64 {
	if x != nil {
		return x.TotalTrades
	}
	return 0
}

type GetOrdersByOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutorAmount string `protobuf:"bytes,1,opt,name=executorAmount,proto3" json:"executorAmount,omitempty"`
	PaymentDetails string `protobuf:"bytes,2,opt,name=paymentDetails,proto3" json:"paymentDetails,omitempty"`
	CreatorAmount  string `protobuf:"bytes,3,opt,name=creatorAmount,proto3" json:"creatorAmount,omitempty"`
	InternalId     string `protobuf:"bytes,4,opt,name=internalId,proto3" json:"internalId,omitempty"`
	TokenFrom      string `protobuf:"bytes,5,opt,name=tokenFrom,proto3" json:"tokenFrom,omitempty"`
	TokenTo        string `protobuf:"bytes,6,opt,name=tokenTo,proto3" json:"tokenTo,omitempty"`
	Status         string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Offset         string `protobuf:"bytes,8,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit          string `protobuf:"bytes,9,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetOrdersByOfferRequest) Reset() {
	*x = GetOrdersByOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersByOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersByOfferRequest) ProtoMessage() {}

func (x *GetOrdersByOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersByOfferRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersByOfferRequest) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{20}
}

func (x *GetOrdersByOfferRequest) GetExecutorAmount() string {
	if x != nil {
		return x.ExecutorAmount
	}
	return ""
}

func (x *GetOrdersByOfferRequest) GetPaymentDetails() string {
	if x != nil {
		return x.PaymentDetails
	}
	return ""
}

func (x *GetOrdersByOfferRequest) GetCreatorAmount() string {
	if x != nil {
		return x.CreatorAmount
	}
	return ""
}

func (x *GetOrdersByOfferRequest) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *GetOrdersByOfferRequest) GetTokenFrom() string {
	if x != nil {
		return x.TokenFrom
	}
	return ""
}

func (x *GetOrdersByOfferRequest) GetTokenTo() string {
	if x != nil {
		return x.TokenTo
	}
	return ""
}

func (x *GetOrdersByOfferRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetOrdersByOfferRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *GetOrdersByOfferRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

type GetOrdersByOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ResponseOrderModel `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetOrdersByOfferResponse) Reset() {
	*x = GetOrdersByOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersByOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersByOfferResponse) ProtoMessage() {}

func (x *GetOrdersByOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersByOfferResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersByOfferResponse) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{21}
}

func (x *GetOrdersByOfferResponse) GetData() []*ResponseOrderModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResponseOrderModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *GetOrder  `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	User  *UserOrder `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ResponseOrderModel) Reset() {
	*x = ResponseOrderModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOrderModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOrderModel) ProtoMessage() {}

func (x *ResponseOrderModel) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOrderModel.ProtoReflect.Descriptor instead.
func (*ResponseOrderModel) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{22}
}

func (x *ResponseOrderModel) GetOrder() *GetOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *ResponseOrderModel) GetUser() *UserOrder {
	if x != nil {
		return x.User
	}
	return nil
}

type UserOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedbackPositive int64   `protobuf:"varint,1,opt,name=feedbackPositive,proto3" json:"feedbackPositive,omitempty"`
	FeedbackNegative int64   `protobuf:"varint,2,opt,name=feedbackNegative,proto3" json:"feedbackNegative,omitempty"`
	TradesCompleted  float64 `protobuf:"fixed64,3,opt,name=tradesCompleted,proto3" json:"tradesCompleted,omitempty"`
	IsVerified       bool    `protobuf:"varint,4,opt,name=isVerified,proto3" json:"isVerified,omitempty"`
	IsBlocked        bool    `protobuf:"varint,5,opt,name=isBlocked,proto3" json:"isBlocked,omitempty"`
	Nickname         string  `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar           string  `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Online           bool    `protobuf:"varint,8,opt,name=online,proto3" json:"online,omitempty"` //  bool dndKey = 9;
}

func (x *UserOrder) Reset() {
	*x = UserOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrder) ProtoMessage() {}

func (x *UserOrder) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrder.ProtoReflect.Descriptor instead.
func (*UserOrder) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{23}
}

func (x *UserOrder) GetFeedbackPositive() int64 {
	if x != nil {
		return x.FeedbackPositive
	}
	return 0
}

func (x *UserOrder) GetFeedbackNegative() int64 {
	if x != nil {
		return x.FeedbackNegative
	}
	return 0
}

func (x *UserOrder) GetTradesCompleted() float64 {
	if x != nil {
		return x.TradesCompleted
	}
	return 0
}

func (x *UserOrder) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *UserOrder) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *UserOrder) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserOrder) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserOrder) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

type InitOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalOfferId string  `protobuf:"bytes,1,opt,name=internalOfferId,proto3" json:"internalOfferId,omitempty"`
	Address         string  `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	PaymentId       string  `protobuf:"bytes,3,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	TakerNickname   string  `protobuf:"bytes,4,opt,name=takerNickname,proto3" json:"takerNickname,omitempty"`
	MakerNickname   string  `protobuf:"bytes,5,opt,name=makerNickname,proto3" json:"makerNickname,omitempty"`
	TakerId         int64   `protobuf:"varint,6,opt,name=takerId,proto3" json:"takerId,omitempty"`
	MakerId         int64   `protobuf:"varint,7,opt,name=makerId,proto3" json:"makerId,omitempty"`
	Crypto          string  `protobuf:"bytes,8,opt,name=crypto,proto3" json:"crypto,omitempty"`
	Fiat            string  `protobuf:"bytes,9,opt,name=fiat,proto3" json:"fiat,omitempty"`
	AmountFrom      float64 `protobuf:"fixed64,10,opt,name=amountFrom,proto3" json:"amountFrom,omitempty"`
	AmountTo        float64 `protobuf:"fixed64,11,opt,name=amountTo,proto3" json:"amountTo,omitempty"`
	Access          string  `protobuf:"bytes,12,opt,name=access,proto3" json:"access,omitempty"`
	FixAmount       float64 `protobuf:"fixed64,13,opt,name=fixAmount,proto3" json:"fixAmount,omitempty"`
	Twa             float64 `protobuf:"fixed64,14,opt,name=twa,proto3" json:"twa,omitempty"`
}

func (x *InitOrderRequest) Reset() {
	*x = InitOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitOrderRequest) ProtoMessage() {}

func (x *InitOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitOrderRequest.ProtoReflect.Descriptor instead.
func (*InitOrderRequest) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{24}
}

func (x *InitOrderRequest) GetInternalOfferId() string {
	if x != nil {
		return x.InternalOfferId
	}
	return ""
}

func (x *InitOrderRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *InitOrderRequest) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *InitOrderRequest) GetTakerNickname() string {
	if x != nil {
		return x.TakerNickname
	}
	return ""
}

func (x *InitOrderRequest) GetMakerNickname() string {
	if x != nil {
		return x.MakerNickname
	}
	return ""
}

func (x *InitOrderRequest) GetTakerId() int64 {
	if x != nil {
		return x.TakerId
	}
	return 0
}

func (x *InitOrderRequest) GetMakerId() int64 {
	if x != nil {
		return x.MakerId
	}
	return 0
}

func (x *InitOrderRequest) GetCrypto() string {
	if x != nil {
		return x.Crypto
	}
	return ""
}

func (x *InitOrderRequest) GetFiat() string {
	if x != nil {
		return x.Fiat
	}
	return ""
}

func (x *InitOrderRequest) GetAmountFrom() float64 {
	if x != nil {
		return x.AmountFrom
	}
	return 0
}

func (x *InitOrderRequest) GetAmountTo() float64 {
	if x != nil {
		return x.AmountTo
	}
	return 0
}

func (x *InitOrderRequest) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *InitOrderRequest) GetFixAmount() float64 {
	if x != nil {
		return x.FixAmount
	}
	return 0
}

func (x *InitOrderRequest) GetTwa() float64 {
	if x != nil {
		return x.Twa
	}
	return 0
}

type InitOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalId string `protobuf:"bytes,1,opt,name=internalId,proto3" json:"internalId,omitempty"`
}

func (x *InitOrderResponse) Reset() {
	*x = InitOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_market_order_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitOrderResponse) ProtoMessage() {}

func (x *InitOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_market_order_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitOrderResponse.ProtoReflect.Descriptor instead.
func (*InitOrderResponse) Descriptor() ([]byte, []int) {
	return file_market_order_proto_rawDescGZIP(), []int{25}
}

func (x *InitOrderResponse) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

var File_market_order_proto protoreflect.FileDescriptor

var file_market_order_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x18, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x17,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x56, 0x0a, 0x12, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x50, 0x0a, 0x18, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x54, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a, 0x18, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x54, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x61, 0x6b,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x7d, 0x0a, 0x09, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xbd, 0x06, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x17,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x17, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x54, 0x0a, 0x17, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x17, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x69, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x46, 0x69, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x50,
	0x61, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x50, 0x61, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x50, 0x61,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68,
	0x61, 0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x43, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x22, 0xf8, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x4d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x32, 0x0a,
	0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4b, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a, 0x18, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x4d,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9a, 0x08, 0x0a, 0x09, 0x43, 0x6f,
	0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x11, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x48, 0x0a, 0x11, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x10, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x6b,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12,
	0x3e, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x69, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x69, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x98, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x54, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x6f, 0x12, 0x2d, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x22, 0x49, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x13,
	0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x68, 0x61, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xac, 0x05, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x17, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x6f, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x43,
	0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x0e, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x69, 0x6f, 0x22, 0xe6, 0x02,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x4f, 0x72, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x22, 0xc2, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x4f, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x73, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x16, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0xad, 0x02, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4a, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x26, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x97, 0x02, 0x0a,
	0x09, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xa4, 0x03, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x66, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x77, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x77, 0x61, 0x22, 0x33, 0x0a,
	0x11, 0x49, 0x6e, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x32, 0xd1, 0x03, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x44,
	0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x61, 0x6b, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x61,
	0x6b, 0x65, 0x72, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_market_order_proto_rawDescOnce sync.Once
	file_market_order_proto_rawDescData = file_market_order_proto_rawDesc
)

func file_market_order_proto_rawDescGZIP() []byte {
	file_market_order_proto_rawDescOnce.Do(func() {
		file_market_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_market_order_proto_rawDescData)
	})
	return file_market_order_proto_rawDescData
}

var file_market_order_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_market_order_proto_goTypes = []interface{}{
	(*HandleMakerPayedResponse)(nil),   // 0: market.HandleMakerPayedResponse
	(*HandleMakerApprovedInfo)(nil),    // 1: market.HandleMakerApprovedInfo
	(*HandlePayedRequest)(nil),         // 2: market.HandlePayedRequest
	(*HandleTakerPayedResponse)(nil),   // 3: market.HandleTakerPayedResponse
	(*HandleTackerApprovedInfo)(nil),   // 4: market.HandleTackerApprovedInfo
	(*TakerInfo)(nil),                  // 5: market.TakerInfo
	(*Order)(nil),                      // 6: market.Order
	(*GetOrdersMeRequest)(nil),         // 7: market.GetOrdersMeRequest
	(*GetOrdersMeResponse)(nil),        // 8: market.GetOrdersMeResponse
	(*ResponseGetOrdersMeModel)(nil),   // 9: market.ResponseGetOrdersMeModel
	(*CoreOrder)(nil),                  // 10: market.CoreOrder
	(*Payment)(nil),                    // 11: market.Payment
	(*PaymentDetail)(nil),              // 12: market.PaymentDetail
	(*DeclineOrderRequest)(nil),        // 13: market.DeclineOrderRequest
	(*ResponseOrderModelWithChat)(nil), // 14: market.ResponseOrderModelWithChat
	(*GetOrder)(nil),                   // 15: market.GetOrder
	(*RequisiteOrder)(nil),             // 16: market.RequisiteOrder
	(*OrderRequisite)(nil),             // 17: market.OrderRequisite
	(*UserChat)(nil),                   // 18: market.UserChat
	(*UserDataOr)(nil),                 // 19: market.UserDataOr
	(*GetOrdersByOfferRequest)(nil),    // 20: market.GetOrdersByOfferRequest
	(*GetOrdersByOfferResponse)(nil),   // 21: market.GetOrdersByOfferResponse
	(*ResponseOrderModel)(nil),         // 22: market.ResponseOrderModel
	(*UserOrder)(nil),                  // 23: market.UserOrder
	(*InitOrderRequest)(nil),           // 24: market.InitOrderRequest
	(*InitOrderResponse)(nil),          // 25: market.InitOrderResponse
	(*timestamppb.Timestamp)(nil),      // 26: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),              // 27: google.protobuf.Empty
}
var file_market_order_proto_depIdxs = []int32{
	1,  // 0: market.HandleMakerPayedResponse.data:type_name -> market.HandleMakerApprovedInfo
	5,  // 1: market.HandleMakerApprovedInfo.takerInfo:type_name -> market.TakerInfo
	6,  // 2: market.HandleMakerApprovedInfo.orderInfo:type_name -> market.Order
	4,  // 3: market.HandleTakerPayedResponse.data:type_name -> market.HandleTackerApprovedInfo
	5,  // 4: market.HandleTackerApprovedInfo.takerInfo:type_name -> market.TakerInfo
	6,  // 5: market.HandleTackerApprovedInfo.orderInfo:type_name -> market.Order
	26, // 6: market.Order.takerApprovedUpdateTime:type_name -> google.protobuf.Timestamp
	26, // 7: market.Order.makerApprovedUpdateTime:type_name -> google.protobuf.Timestamp
	26, // 8: market.Order.createTime:type_name -> google.protobuf.Timestamp
	26, // 9: market.Order.receiptTime:type_name -> google.protobuf.Timestamp
	26, // 10: market.GetOrdersMeRequest.dateFrom:type_name -> google.protobuf.Timestamp
	26, // 11: market.GetOrdersMeRequest.dateTo:type_name -> google.protobuf.Timestamp
	9,  // 12: market.GetOrdersMeResponse.data:type_name -> market.ResponseGetOrdersMeModel
	10, // 13: market.ResponseGetOrdersMeModel.data:type_name -> market.CoreOrder
	26, // 14: market.CoreOrder.makerApprovedTime:type_name -> google.protobuf.Timestamp
	26, // 15: market.CoreOrder.takerApprovedTime:type_name -> google.protobuf.Timestamp
	26, // 16: market.CoreOrder.makerConfirmTime:type_name -> google.protobuf.Timestamp
	26, // 17: market.CoreOrder.completeTime:type_name -> google.protobuf.Timestamp
	26, // 18: market.CoreOrder.createTime:type_name -> google.protobuf.Timestamp
	26, // 19: market.CoreOrder.updateTime:type_name -> google.protobuf.Timestamp
	26, // 20: market.CoreOrder.deleteTime:type_name -> google.protobuf.Timestamp
	11, // 21: market.CoreOrder.payment:type_name -> market.Payment
	26, // 22: market.Payment.createTime:type_name -> google.protobuf.Timestamp
	26, // 23: market.Payment.updateTime:type_name -> google.protobuf.Timestamp
	12, // 24: market.Payment.detail:type_name -> market.PaymentDetail
	17, // 25: market.ResponseOrderModelWithChat.requisite:type_name -> market.OrderRequisite
	15, // 26: market.ResponseOrderModelWithChat.order:type_name -> market.GetOrder
	18, // 27: market.ResponseOrderModelWithChat.user:type_name -> market.UserChat
	26, // 28: market.GetOrder.createTime:type_name -> google.protobuf.Timestamp
	26, // 29: market.GetOrder.expireOffer:type_name -> google.protobuf.Timestamp
	16, // 30: market.GetOrder.payments:type_name -> market.RequisiteOrder
	19, // 31: market.UserChat.statistics:type_name -> market.UserDataOr
	22, // 32: market.GetOrdersByOfferResponse.data:type_name -> market.ResponseOrderModel
	15, // 33: market.ResponseOrderModel.order:type_name -> market.GetOrder
	23, // 34: market.ResponseOrderModel.user:type_name -> market.UserOrder
	20, // 35: market.order.GetOrdersByOffer:input_type -> market.GetOrdersByOfferRequest
	24, // 36: market.order.InitOrder:input_type -> market.InitOrderRequest
	13, // 37: market.order.DeclineOrder:input_type -> market.DeclineOrderRequest
	7,  // 38: market.order.GetOrdersMe:input_type -> market.GetOrdersMeRequest
	2,  // 39: market.order.HandleTakerPayed:input_type -> market.HandlePayedRequest
	2,  // 40: market.order.HandleMakerPayed:input_type -> market.HandlePayedRequest
	21, // 41: market.order.GetOrdersByOffer:output_type -> market.GetOrdersByOfferResponse
	25, // 42: market.order.InitOrder:output_type -> market.InitOrderResponse
	27, // 43: market.order.DeclineOrder:output_type -> google.protobuf.Empty
	8,  // 44: market.order.GetOrdersMe:output_type -> market.GetOrdersMeResponse
	3,  // 45: market.order.HandleTakerPayed:output_type -> market.HandleTakerPayedResponse
	0,  // 46: market.order.HandleMakerPayed:output_type -> market.HandleMakerPayedResponse
	41, // [41:47] is the sub-list for method output_type
	35, // [35:41] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_market_order_proto_init() }
func file_market_order_proto_init() {
	if File_market_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_market_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleMakerPayedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleMakerApprovedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandlePayedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleTakerPayedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleTackerApprovedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersMeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersMeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetOrdersMeModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOrderModelWithChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequisiteOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRequisite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataOr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersByOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersByOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOrderModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_market_order_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_market_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_market_order_proto_goTypes,
		DependencyIndexes: file_market_order_proto_depIdxs,
		MessageInfos:      file_market_order_proto_msgTypes,
	}.Build()
	File_market_order_proto = out.File
	file_market_order_proto_rawDesc = nil
	file_market_order_proto_goTypes = nil
	file_market_order_proto_depIdxs = nil
}
