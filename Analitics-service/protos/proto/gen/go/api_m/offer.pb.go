// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: api_m/offer.proto

package api_m

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SORT_TYPE int32

const (
	SORT_TYPE_SORT_UNSPECIFIED SORT_TYPE = 0
	SORT_TYPE_SORT_RATE_ASC    SORT_TYPE = 1
	SORT_TYPE_SORT_RATE_DESC   SORT_TYPE = 2
	SORT_TYPE_SORT_TIME_ASC    SORT_TYPE = 3
)

// Enum value maps for SORT_TYPE.
var (
	SORT_TYPE_name = map[int32]string{
		0: "SORT_UNSPECIFIED",
		1: "SORT_RATE_ASC",
		2: "SORT_RATE_DESC",
		3: "SORT_TIME_ASC",
	}
	SORT_TYPE_value = map[string]int32{
		"SORT_UNSPECIFIED": 0,
		"SORT_RATE_ASC":    1,
		"SORT_RATE_DESC":   2,
		"SORT_TIME_ASC":    3,
	}
)

func (x SORT_TYPE) Enum() *SORT_TYPE {
	p := new(SORT_TYPE)
	*p = x
	return p
}

func (x SORT_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SORT_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_api_m_offer_proto_enumTypes[0].Descriptor()
}

func (SORT_TYPE) Type() protoreflect.EnumType {
	return &file_api_m_offer_proto_enumTypes[0]
}

func (x SORT_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SORT_TYPE.Descriptor instead.
func (SORT_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{0}
}

// TODO access
type GetOffersUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Limit int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetOffersUserRequest) Reset() {
	*x = GetOffersUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffersUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffersUserRequest) ProtoMessage() {}

func (x *GetOffersUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffersUserRequest.ProtoReflect.Descriptor instead.
func (*GetOffersUserRequest) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{0}
}

func (x *GetOffersUserRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetOffersUserRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetOffersUserRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetOffersUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*OfferData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Pages int64        `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *GetOffersUserResponse) Reset() {
	*x = GetOffersUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffersUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffersUserResponse) ProtoMessage() {}

func (x *GetOffersUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffersUserResponse.ProtoReflect.Descriptor instead.
func (*GetOffersUserResponse) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{1}
}

func (x *GetOffersUserResponse) GetData() []*OfferData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetOffersUserResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetOffersUserResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

// TODO access then clientId
type DeleteOfferFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalId string `protobuf:"bytes,1,opt,name=internalId,proto3" json:"internalId,omitempty"` //  int64 clientId = 2; // убрать нахуй сменить на access and clientId
}

func (x *DeleteOfferFRequest) Reset() {
	*x = DeleteOfferFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOfferFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOfferFRequest) ProtoMessage() {}

func (x *DeleteOfferFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOfferFRequest.ProtoReflect.Descriptor instead.
func (*DeleteOfferFRequest) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteOfferFRequest) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

// TODO without access
type DeleteOfferBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalId string `protobuf:"bytes,1,opt,name=internalId,proto3" json:"internalId,omitempty"`
	ClientId   int64  `protobuf:"varint,2,opt,name=clientId,proto3" json:"clientId,omitempty"` // убрать нахуй сменить на access and clientId
}

func (x *DeleteOfferBRequest) Reset() {
	*x = DeleteOfferBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOfferBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOfferBRequest) ProtoMessage() {}

func (x *DeleteOfferBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOfferBRequest.ProtoReflect.Descriptor instead.
func (*DeleteOfferBRequest) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteOfferBRequest) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *DeleteOfferBRequest) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

// TODO
type GetActiveOffersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`     // buy/sell
	Fiat       []string  `protobuf:"bytes,2,rep,name=fiat,proto3" json:"fiat,omitempty"`     // RUB зачем если фиат один только, это РУБ
	Crypto     string    `protobuf:"bytes,3,opt,name=crypto,proto3" json:"crypto,omitempty"` // USDTTRC
	Amount     float64   `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	BestRating bool      `protobuf:"varint,5,opt,name=bestRating,proto3" json:"bestRating,omitempty"`
	BestPrice  bool      `protobuf:"varint,6,opt,name=bestPrice,proto3" json:"bestPrice,omitempty"`
	Limit      int64     `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int64     `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	Sort       SORT_TYPE `protobuf:"varint,9,opt,name=sort,proto3,enum=api_m.SORT_TYPE" json:"sort,omitempty"` // rate_asc, rate_desc, time move to ENUM
}

func (x *GetActiveOffersRequest) Reset() {
	*x = GetActiveOffersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveOffersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveOffersRequest) ProtoMessage() {}

func (x *GetActiveOffersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveOffersRequest.ProtoReflect.Descriptor instead.
func (*GetActiveOffersRequest) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{4}
}

func (x *GetActiveOffersRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetActiveOffersRequest) GetFiat() []string {
	if x != nil {
		return x.Fiat
	}
	return nil
}

func (x *GetActiveOffersRequest) GetCrypto() string {
	if x != nil {
		return x.Crypto
	}
	return ""
}

func (x *GetActiveOffersRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *GetActiveOffersRequest) GetBestRating() bool {
	if x != nil {
		return x.BestRating
	}
	return false
}

func (x *GetActiveOffersRequest) GetBestPrice() bool {
	if x != nil {
		return x.BestPrice
	}
	return false
}

func (x *GetActiveOffersRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetActiveOffersRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetActiveOffersRequest) GetSort() SORT_TYPE {
	if x != nil {
		return x.Sort
	}
	return SORT_TYPE_SORT_UNSPECIFIED
}

type GetActiveOffersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*OfferData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Pages int64        `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *GetActiveOffersResponse) Reset() {
	*x = GetActiveOffersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveOffersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveOffersResponse) ProtoMessage() {}

func (x *GetActiveOffersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveOffersResponse.ProtoReflect.Descriptor instead.
func (*GetActiveOffersResponse) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{5}
}

func (x *GetActiveOffersResponse) GetData() []*OfferData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetActiveOffersResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetActiveOffersResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

// TODO access then userId
type CreateOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            string                `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // buy/sell
	ExchangePercent float64               `protobuf:"fixed64,2,opt,name=exchangePercent,proto3" json:"exchangePercent,omitempty"`
	LiquidityCrypto float64               `protobuf:"fixed64,3,opt,name=liquidityCrypto,proto3" json:"liquidityCrypto,omitempty"`
	LiquidityFiat   float64               `protobuf:"fixed64,4,opt,name=liquidityFiat,proto3" json:"liquidityFiat,omitempty"`
	Fixed           bool                  `protobuf:"varint,5,opt,name=fixed,proto3" json:"fixed,omitempty"`
	Payments        []*CreateOfferPayment `protobuf:"bytes,6,rep,name=payments,proto3" json:"payments,omitempty"`
	ExchangeRate    float64               `protobuf:"fixed64,7,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	LimitMin        float64               `protobuf:"fixed64,8,opt,name=limitMin,proto3" json:"limitMin,omitempty"`
	LimitMax        float64               `protobuf:"fixed64,9,opt,name=limitMax,proto3" json:"limitMax,omitempty"`
	Fiat            string                `protobuf:"bytes,10,opt,name=fiat,proto3" json:"fiat,omitempty"`
	Crypto          string                `protobuf:"bytes,11,opt,name=crypto,proto3" json:"crypto,omitempty"`
	// double transactionWithdrawAmount = 12; // <>
	// string countryCode = 13;  // delete nahui
	Term                    string `protobuf:"bytes,12,opt,name=term,proto3" json:"term,omitempty"` // условия сделки
	ExpireOfferTime         int64  `protobuf:"varint,13,opt,name=ExpireOfferTime,proto3" json:"ExpireOfferTime,omitempty"`
	ExpireOrderCreationTime int64  `protobuf:"varint,14,opt,name=ExpireOrderCreationTime,proto3" json:"ExpireOrderCreationTime,omitempty"`
	ExternalId              string `protobuf:"bytes,15,opt,name=ExternalId,proto3" json:"ExternalId,omitempty"`
}

func (x *CreateOfferRequest) Reset() {
	*x = CreateOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfferRequest) ProtoMessage() {}

func (x *CreateOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfferRequest.ProtoReflect.Descriptor instead.
func (*CreateOfferRequest) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{6}
}

func (x *CreateOfferRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateOfferRequest) GetExchangePercent() float64 {
	if x != nil {
		return x.ExchangePercent
	}
	return 0
}

func (x *CreateOfferRequest) GetLiquidityCrypto() float64 {
	if x != nil {
		return x.LiquidityCrypto
	}
	return 0
}

func (x *CreateOfferRequest) GetLiquidityFiat() float64 {
	if x != nil {
		return x.LiquidityFiat
	}
	return 0
}

func (x *CreateOfferRequest) GetFixed() bool {
	if x != nil {
		return x.Fixed
	}
	return false
}

func (x *CreateOfferRequest) GetPayments() []*CreateOfferPayment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *CreateOfferRequest) GetExchangeRate() float64 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *CreateOfferRequest) GetLimitMin() float64 {
	if x != nil {
		return x.LimitMin
	}
	return 0
}

func (x *CreateOfferRequest) GetLimitMax() float64 {
	if x != nil {
		return x.LimitMax
	}
	return 0
}

func (x *CreateOfferRequest) GetFiat() string {
	if x != nil {
		return x.Fiat
	}
	return ""
}

func (x *CreateOfferRequest) GetCrypto() string {
	if x != nil {
		return x.Crypto
	}
	return ""
}

func (x *CreateOfferRequest) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *CreateOfferRequest) GetExpireOfferTime() int64 {
	if x != nil {
		return x.ExpireOfferTime
	}
	return 0
}

func (x *CreateOfferRequest) GetExpireOrderCreationTime() int64 {
	if x != nil {
		return x.ExpireOrderCreationTime
	}
	return 0
}

func (x *CreateOfferRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type CreateOfferPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenFrom string `protobuf:"bytes,1,opt,name=tokenFrom,proto3" json:"tokenFrom,omitempty"`
	TokenTo   string `protobuf:"bytes,2,opt,name=tokenTo,proto3" json:"tokenTo,omitempty"`
	Extra     string `protobuf:"bytes,3,opt,name=extra,proto3" json:"extra,omitempty"`
	Address   string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *CreateOfferPayment) Reset() {
	*x = CreateOfferPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfferPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfferPayment) ProtoMessage() {}

func (x *CreateOfferPayment) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfferPayment.ProtoReflect.Descriptor instead.
func (*CreateOfferPayment) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{7}
}

func (x *CreateOfferPayment) GetTokenFrom() string {
	if x != nil {
		return x.TokenFrom
	}
	return ""
}

func (x *CreateOfferPayment) GetTokenTo() string {
	if x != nil {
		return x.TokenTo
	}
	return ""
}

func (x *CreateOfferPayment) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *CreateOfferPayment) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type OfferData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferInfo         *OfferInfo  `protobuf:"bytes,1,opt,name=offerInfo,proto3" json:"offerInfo,omitempty"`
	User              *UserInfoOf `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	OfferIsNotCreated bool        `protobuf:"varint,3,opt,name=offerIsNotCreated,proto3" json:"offerIsNotCreated,omitempty"`
}

func (x *OfferData) Reset() {
	*x = OfferData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferData) ProtoMessage() {}

func (x *OfferData) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferData.ProtoReflect.Descriptor instead.
func (*OfferData) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{8}
}

func (x *OfferData) GetOfferInfo() *OfferInfo {
	if x != nil {
		return x.OfferInfo
	}
	return nil
}

func (x *OfferData) GetUser() *UserInfoOf {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *OfferData) GetOfferIsNotCreated() bool {
	if x != nil {
		return x.OfferIsNotCreated
	}
	return false
}

type OfferInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payments []*RequisiteOffer `protobuf:"bytes,1,rep,name=payments,proto3" json:"payments,omitempty"`
	// string countryCode = 2; // delete nahui
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"` // описание оффера
	InternalId  string `protobuf:"bytes,3,opt,name=internalId,proto3" json:"internalId,omitempty"`   // внутренний id оффера
	// string dExternalId = 5; // <>
	LiquidityFiat   float64 `protobuf:"fixed64,4,opt,name=liquidityFiat,proto3" json:"liquidityFiat,omitempty"`     // сумма в фиате
	LiquidityCrypto float64 `protobuf:"fixed64,5,opt,name=liquidityCrypto,proto3" json:"liquidityCrypto,omitempty"` // сумма в крипте
	LimitMin        float64 `protobuf:"fixed64,6,opt,name=limitMin,proto3" json:"limitMin,omitempty"`               // минимальная сумма
	LimitMax        float64 `protobuf:"fixed64,7,opt,name=limitMax,proto3" json:"limitMax,omitempty"`               // максимальная сумма
	ExchangeRate    float64 `protobuf:"fixed64,8,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`       // курс
	Terms           string  `protobuf:"bytes,9,opt,name=terms,proto3" json:"terms,omitempty"`                       // + условия сделки
	Status          string  `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`                    // статус оффера
	// string cryptoToken = 13; // <>
	ExpireOrderCreationTime string `protobuf:"bytes,12,opt,name=expireOrderCreationTime,proto3" json:"expireOrderCreationTime,omitempty"` // время жизни оффера
	NeedMerchant            bool   `protobuf:"varint,13,opt,name=needMerchant,proto3" json:"needMerchant,omitempty"`                      // ?
	// string fiatMarket = 16; // <>
	FiatTech string `protobuf:"bytes,14,opt,name=fiatTech,proto3" json:"fiatTech,omitempty"` // SBERRUB
	// string cryptoMarket = 18; // <>
	CryptoTech string `protobuf:"bytes,15,opt,name=cryptoTech,proto3" json:"cryptoTech,omitempty"` // USDTTRC
	// uint64 id = 20; // <>
	Type string `protobuf:"bytes,16,opt,name=type,proto3" json:"type,omitempty"` // buy/sell
	// double percent = 22; // <>
	// int64 originId = 23; // <>
	IsFixed    bool  `protobuf:"varint,17,opt,name=isFixed,proto3" json:"isFixed,omitempty"` // курс фиксированный
	Pro        bool  `protobuf:"varint,18,opt,name=pro,proto3" json:"pro,omitempty"`         // проверенный ли трейдер
	CreateTime int64 `protobuf:"varint,19,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *OfferInfo) Reset() {
	*x = OfferInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferInfo) ProtoMessage() {}

func (x *OfferInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferInfo.ProtoReflect.Descriptor instead.
func (*OfferInfo) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{9}
}

func (x *OfferInfo) GetPayments() []*RequisiteOffer {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *OfferInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OfferInfo) GetInternalId() string {
	if x != nil {
		return x.InternalId
	}
	return ""
}

func (x *OfferInfo) GetLiquidityFiat() float64 {
	if x != nil {
		return x.LiquidityFiat
	}
	return 0
}

func (x *OfferInfo) GetLiquidityCrypto() float64 {
	if x != nil {
		return x.LiquidityCrypto
	}
	return 0
}

func (x *OfferInfo) GetLimitMin() float64 {
	if x != nil {
		return x.LimitMin
	}
	return 0
}

func (x *OfferInfo) GetLimitMax() float64 {
	if x != nil {
		return x.LimitMax
	}
	return 0
}

func (x *OfferInfo) GetExchangeRate() float64 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *OfferInfo) GetTerms() string {
	if x != nil {
		return x.Terms
	}
	return ""
}

func (x *OfferInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OfferInfo) GetExpireOrderCreationTime() string {
	if x != nil {
		return x.ExpireOrderCreationTime
	}
	return ""
}

func (x *OfferInfo) GetNeedMerchant() bool {
	if x != nil {
		return x.NeedMerchant
	}
	return false
}

func (x *OfferInfo) GetFiatTech() string {
	if x != nil {
		return x.FiatTech
	}
	return ""
}

func (x *OfferInfo) GetCryptoTech() string {
	if x != nil {
		return x.CryptoTech
	}
	return ""
}

func (x *OfferInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OfferInfo) GetIsFixed() bool {
	if x != nil {
		return x.IsFixed
	}
	return false
}

func (x *OfferInfo) GetPro() bool {
	if x != nil {
		return x.Pro
	}
	return false
}

func (x *OfferInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type UserInfoOf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int64 id = 1;  // hide it
	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"` // aa***aa@example.com
	Avatar   string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// string bio = 5; // *
	IsBLocked    bool  `protobuf:"varint,4,opt,name=isBLocked,proto3" json:"isBLocked,omitempty"`
	IsVerified   bool  `protobuf:"varint,5,opt,name=isVerified,proto3" json:"isVerified,omitempty"`
	BlockedUntil int64 `protobuf:"varint,6,opt,name=blockedUntil,proto3" json:"blockedUntil,omitempty"`
	LastEntry    int64 `protobuf:"varint,7,opt,name=lastEntry,proto3" json:"lastEntry,omitempty"`
	// string lastActivity = 10; // <>
	RegistrationDate int64  `protobuf:"varint,8,opt,name=registrationDate,proto3" json:"registrationDate,omitempty"` // delete nahui
	Language         string `protobuf:"bytes,9,opt,name=language,proto3" json:"language,omitempty"`
	// bool isDnD = 13; // <>
	// int64 positiveFeedbacks = 14; // <>
	// int64 negativeFeedbacks = 15; // <>
	// double tradesCompletedPercent = 16; // <>
	// int64 totalTrades = 17; // <>
	Merchant   bool        `protobuf:"varint,11,opt,name=merchant,proto3" json:"merchant,omitempty"`
	Statistics *UserDataOf `protobuf:"bytes,12,opt,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *UserInfoOf) Reset() {
	*x = UserInfoOf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoOf) ProtoMessage() {}

func (x *UserInfoOf) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoOf.ProtoReflect.Descriptor instead.
func (*UserInfoOf) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{10}
}

func (x *UserInfoOf) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfoOf) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfoOf) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfoOf) GetIsBLocked() bool {
	if x != nil {
		return x.IsBLocked
	}
	return false
}

func (x *UserInfoOf) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *UserInfoOf) GetBlockedUntil() int64 {
	if x != nil {
		return x.BlockedUntil
	}
	return 0
}

func (x *UserInfoOf) GetLastEntry() int64 {
	if x != nil {
		return x.LastEntry
	}
	return 0
}

func (x *UserInfoOf) GetRegistrationDate() int64 {
	if x != nil {
		return x.RegistrationDate
	}
	return 0
}

func (x *UserInfoOf) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UserInfoOf) GetMerchant() bool {
	if x != nil {
		return x.Merchant
	}
	return false
}

func (x *UserInfoOf) GetStatistics() *UserDataOf {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type UserDataOf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositiveFeedbacks      int64   `protobuf:"varint,1,opt,name=positiveFeedbacks,proto3" json:"positiveFeedbacks,omitempty"`
	NegativeFeedbacks      int64   `protobuf:"varint,2,opt,name=negativeFeedbacks,proto3" json:"negativeFeedbacks,omitempty"`
	TradesCompletedPercent float64 `protobuf:"fixed64,3,opt,name=tradesCompletedPercent,proto3" json:"tradesCompletedPercent,omitempty"`
	TotalTrades            int64   `protobuf:"varint,4,opt,name=totalTrades,proto3" json:"totalTrades,omitempty"`
}

func (x *UserDataOf) Reset() {
	*x = UserDataOf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataOf) ProtoMessage() {}

func (x *UserDataOf) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataOf.ProtoReflect.Descriptor instead.
func (*UserDataOf) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{11}
}

func (x *UserDataOf) GetPositiveFeedbacks() int64 {
	if x != nil {
		return x.PositiveFeedbacks
	}
	return 0
}

func (x *UserDataOf) GetNegativeFeedbacks() int64 {
	if x != nil {
		return x.NegativeFeedbacks
	}
	return 0
}

func (x *UserDataOf) GetTradesCompletedPercent() float64 {
	if x != nil {
		return x.TradesCompletedPercent
	}
	return 0
}

func (x *UserDataOf) GetTotalTrades() int64 {
	if x != nil {
		return x.TotalTrades
	}
	return 0
}

type RequisiteOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// int64 tokenId = 2; // <>
	// int64 cryptoId = 3; // <>
	Surname string `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	IsHide  bool   `protobuf:"varint,3,opt,name=isHide,proto3" json:"isHide,omitempty"`
	Card    string `protobuf:"bytes,4,opt,name=card,proto3" json:"card,omitempty"`
	RId     string `protobuf:"bytes,5,opt,name=rId,proto3" json:"rId,omitempty"`
	// int64 id = 8; // <>
	Tech string `protobuf:"bytes,6,opt,name=tech,proto3" json:"tech,omitempty"`
}

func (x *RequisiteOffer) Reset() {
	*x = RequisiteOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m_offer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequisiteOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequisiteOffer) ProtoMessage() {}

func (x *RequisiteOffer) ProtoReflect() protoreflect.Message {
	mi := &file_api_m_offer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequisiteOffer.ProtoReflect.Descriptor instead.
func (*RequisiteOffer) Descriptor() ([]byte, []int) {
	return file_api_m_offer_proto_rawDescGZIP(), []int{12}
}

func (x *RequisiteOffer) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *RequisiteOffer) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *RequisiteOffer) GetIsHide() bool {
	if x != nil {
		return x.IsHide
	}
	return false
}

func (x *RequisiteOffer) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (x *RequisiteOffer) GetRId() string {
	if x != nil {
		return x.RId
	}
	return ""
}

func (x *RequisiteOffer) GetTech() string {
	if x != nil {
		return x.Tech
	}
	return ""
}

var File_api_m_offer_proto protoreflect.FileDescriptor

var file_api_m_offer_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x69, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22,
	0x51, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x42, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x61, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x69, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x65, 0x73, 0x74, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x6d, 0x2e, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x22, 0x6b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x8f, 0x04, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x46, 0x69, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x46, 0x69, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d,
	0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x69, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69,
	0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x72, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x28,
	0x0a, 0x0f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x22, 0x7c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x90, 0x01, 0x0a, 0x09, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e,
	0x0a, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x66, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x73,
	0x4e, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x22, 0xd4, 0x04, 0x0a, 0x09, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x46, 0x69, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x46, 0x69, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d,
	0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x22,
	0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x38, 0x0a, 0x17, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65,
	0x65, 0x64, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x61, 0x74, 0x54, 0x65, 0x63, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x61, 0x74, 0x54, 0x65, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x54, 0x65, 0x63, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x54, 0x65, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x72, 0x6f, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x70, 0x72, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xed, 0x02, 0x0a, 0x0a, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x42, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x42, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x66, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x0a, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x66, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22,
	0x9a, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x48, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x48, 0x69,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x63, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x63, 0x68, 0x2a, 0x5b, 0x0a, 0x09,
	0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x4f, 0x52,
	0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x53, 0x43,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f,
	0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x03, 0x32, 0xf0, 0x02, 0x0a, 0x05, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x45, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x42, 0x61,
	0x63, 0x6b, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x46, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07,
	0x2e, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_m_offer_proto_rawDescOnce sync.Once
	file_api_m_offer_proto_rawDescData = file_api_m_offer_proto_rawDesc
)

func file_api_m_offer_proto_rawDescGZIP() []byte {
	file_api_m_offer_proto_rawDescOnce.Do(func() {
		file_api_m_offer_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_m_offer_proto_rawDescData)
	})
	return file_api_m_offer_proto_rawDescData
}

var file_api_m_offer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_m_offer_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_m_offer_proto_goTypes = []interface{}{
	(SORT_TYPE)(0),                  // 0: api_m.SORT_TYPE
	(*GetOffersUserRequest)(nil),    // 1: api_m.GetOffersUserRequest
	(*GetOffersUserResponse)(nil),   // 2: api_m.GetOffersUserResponse
	(*DeleteOfferFRequest)(nil),     // 3: api_m.DeleteOfferFRequest
	(*DeleteOfferBRequest)(nil),     // 4: api_m.DeleteOfferBRequest
	(*GetActiveOffersRequest)(nil),  // 5: api_m.GetActiveOffersRequest
	(*GetActiveOffersResponse)(nil), // 6: api_m.GetActiveOffersResponse
	(*CreateOfferRequest)(nil),      // 7: api_m.CreateOfferRequest
	(*CreateOfferPayment)(nil),      // 8: api_m.CreateOfferPayment
	(*OfferData)(nil),               // 9: api_m.OfferData
	(*OfferInfo)(nil),               // 10: api_m.OfferInfo
	(*UserInfoOf)(nil),              // 11: api_m.UserInfoOf
	(*UserDataOf)(nil),              // 12: api_m.UserDataOf
	(*RequisiteOffer)(nil),          // 13: api_m.RequisiteOffer
	(*emptypb.Empty)(nil),           // 14: google.protobuf.Empty
}
var file_api_m_offer_proto_depIdxs = []int32{
	9,  // 0: api_m.GetOffersUserResponse.data:type_name -> api_m.OfferData
	0,  // 1: api_m.GetActiveOffersRequest.sort:type_name -> api_m.SORT_TYPE
	9,  // 2: api_m.GetActiveOffersResponse.data:type_name -> api_m.OfferData
	8,  // 3: api_m.CreateOfferRequest.payments:type_name -> api_m.CreateOfferPayment
	10, // 4: api_m.OfferData.offerInfo:type_name -> api_m.OfferInfo
	11, // 5: api_m.OfferData.user:type_name -> api_m.UserInfoOf
	13, // 6: api_m.OfferInfo.payments:type_name -> api_m.RequisiteOffer
	12, // 7: api_m.UserInfoOf.statistics:type_name -> api_m.UserDataOf
	7,  // 8: api_m.offer.CreateOffer:input_type -> api_m.CreateOfferRequest
	4,  // 9: api_m.offer.DeleteOfferBack:input_type -> api_m.DeleteOfferBRequest
	3,  // 10: api_m.offer.DeleteOfferFront:input_type -> api_m.DeleteOfferFRequest
	5,  // 11: api_m.offer.GetActiveOffers:input_type -> api_m.GetActiveOffersRequest
	1,  // 12: api_m.offer.GetOffersUser:input_type -> api_m.GetOffersUserRequest
	9,  // 13: api_m.offer.CreateOffer:output_type -> api_m.OfferData
	14, // 14: api_m.offer.DeleteOfferBack:output_type -> google.protobuf.Empty
	14, // 15: api_m.offer.DeleteOfferFront:output_type -> google.protobuf.Empty
	6,  // 16: api_m.offer.GetActiveOffers:output_type -> api_m.GetActiveOffersResponse
	2,  // 17: api_m.offer.GetOffersUser:output_type -> api_m.GetOffersUserResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_m_offer_proto_init() }
func file_api_m_offer_proto_init() {
	if File_api_m_offer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_m_offer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffersUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffersUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOfferFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOfferBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveOffersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveOffersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOfferPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoOf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataOf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m_offer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequisiteOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_m_offer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_m_offer_proto_goTypes,
		DependencyIndexes: file_api_m_offer_proto_depIdxs,
		EnumInfos:         file_api_m_offer_proto_enumTypes,
		MessageInfos:      file_api_m_offer_proto_msgTypes,
	}.Build()
	File_api_m_offer_proto = out.File
	file_api_m_offer_proto_rawDesc = nil
	file_api_m_offer_proto_goTypes = nil
	file_api_m_offer_proto_depIdxs = nil
}
